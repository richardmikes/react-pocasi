{"ast":null,"code":"var _jsxFileName = \"/Users/richardmikes/Documents/GitHub/react-pocasi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n      toast.info(\"Fetching weather for \" + message);\n      await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`);\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","message","toast","info","then","data","success","name","country","formatBackground","threshold","temp","hourly","daily"],"sources":["/Users/richardmikes/Documents/GitHub/react-pocasi/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n\n      toast.info(\"Fetching weather for \" + message);\n\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        toast.success(\n          `Successfully fetched weather for ${data.name}, ${data.country}.`\n        );\n\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;IAAEI,CAAC,EAAE;EAAL,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,YAAY;MAC/B,MAAMC,OAAO,GAAGR,KAAK,CAACE,CAAN,GAAUF,KAAK,CAACE,CAAhB,GAAoB,mBAApC;MAEAO,KAAK,CAACC,IAAN,CAAW,0BAA0BF,OAArC;MAEA,MAAMZ,uBAAuB,CAAC,EAAE,GAAGI,KAAL;QAAYG;MAAZ,CAAD,CAAvB,CAA6CQ,IAA7C,CAAmDC,IAAD,IAAU;QAChEH,KAAK,CAACI,OAAN,CACG,oCAAmCD,IAAI,CAACE,IAAK,KAAIF,IAAI,CAACG,OAAQ,GADjE;QAIAT,UAAU,CAACM,IAAD,CAAV;MACD,CANK,CAAN;IAOD,CAZD;;IAcAL,YAAY;EACb,CAhBQ,EAgBN,CAACP,KAAD,EAAQG,KAAR,CAhBM,CAAT;;EAkBA,MAAMa,gBAAgB,GAAG,MAAM;IAC7B,IAAI,CAACX,OAAL,EAAc,OAAO,2BAAP;IACd,MAAMY,SAAS,GAAGd,KAAK,KAAK,QAAV,GAAqB,EAArB,GAA0B,EAA5C;IACA,IAAIE,OAAO,CAACa,IAAR,IAAgBD,SAApB,EAA+B,OAAO,2BAAP;IAE/B,OAAO,+BAAP;EACD,CAND;;EAQA,oBACE;IACE,SAAS,EAAG,8FAA6FD,gBAAgB,EAAG,EAD9H;IAAA,wBAGE,QAAC,UAAD;MAAY,QAAQ,EAAEf;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,QAAQ,EAAEA,QAAlB;MAA4B,KAAK,EAAEE,KAAnC;MAA0C,QAAQ,EAAEC;IAApD;MAAA;MAAA;MAAA;IAAA,QAJF,EAMGC,OAAO,iBACN;MAAA,wBACE,QAAC,eAAD;QAAiB,OAAO,EAAEA;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,qBAAD;QAAuB,OAAO,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,QAAD;QAAU,KAAK,EAAC,iBAAhB;QAAkC,KAAK,EAAEA,OAAO,CAACc;MAAjD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAU,KAAK,EAAC,gBAAhB;QAAiC,KAAK,EAAEd,OAAO,CAACe;MAAhD;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAgBE,QAAC,cAAD;MAAgB,SAAS,EAAE,IAA3B;MAAiC,KAAK,EAAC,SAAvC;MAAiD,WAAW,EAAE;IAA9D;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAnDQrB,G;;KAAAA,G;AAqDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}