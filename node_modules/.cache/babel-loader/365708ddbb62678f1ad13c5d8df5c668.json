{"ast":null,"code":"var _jsxFileName = \"/Users/richardmikes/Documents/GitHub/react-pocasi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"cold-wtr\";\n    const threshold = units === \"metric\" ? 22 : 71.6;\n    if (weather.temp <= threshold) return \"cold-wtr\";\n    return \"warm-wtr\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `py-5 px-32 bg-gradient-to-br min-h-screen shadow-xl shadow-gray-400 ${formatBackground()}`,\n    style: {\n      backgroundImage: url\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-screen-sm mx-auto`,\n      children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n        setQuery: setQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        setQuery: setQuery,\n        units: units,\n        setUnits: setUnits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          title: \"hourly forecast\",\n          items: weather.hourly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          title: \"daily forecast\",\n          items: weather.daily\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data","formatBackground","threshold","temp","backgroundImage","url","hourly","daily"],"sources":["/Users/richardmikes/Documents/GitHub/react-pocasi/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"cold-wtr\";\n    const threshold = units === \"metric\" ? 22 : 71.6;\n    if (weather.temp <= threshold) return \"cold-wtr\";\n\n    return \"warm-wtr\";\n  };\n\n  return (\n    <div\n      className={`py-5 px-32 bg-gradient-to-br min-h-screen shadow-xl shadow-gray-400 ${formatBackground()}`} style={{backgroundImage:url}}\n    ><div className={`max-w-screen-sm mx-auto`}>\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;IAAEI,CAAC,EAAE;EAAL,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,YAAY;MAC/B,MAAMX,uBAAuB,CAAC,EAAE,GAAGI,KAAL;QAAYG;MAAZ,CAAD,CAAvB,CAA6CK,IAA7C,CAAmDC,IAAD,IAAU;QAChEH,UAAU,CAACG,IAAD,CAAV;MACD,CAFK,CAAN;IAGD,CAJD;;IAMAF,YAAY;EACb,CARQ,EAQN,CAACP,KAAD,EAAQG,KAAR,CARM,CAAT;;EAUA,MAAMO,gBAAgB,GAAG,MAAM;IAC7B,IAAI,CAACL,OAAL,EAAc,OAAO,UAAP;IACd,MAAMM,SAAS,GAAGR,KAAK,KAAK,QAAV,GAAqB,EAArB,GAA0B,IAA5C;IACA,IAAIE,OAAO,CAACO,IAAR,IAAgBD,SAApB,EAA+B,OAAO,UAAP;IAE/B,OAAO,UAAP;EACD,CAND;;EAQA,oBACE;IACE,SAAS,EAAG,uEAAsED,gBAAgB,EAAG,EADvG;IAC0G,KAAK,EAAE;MAACG,eAAe,EAACC;IAAjB,CADjH;IAAA,uBAEC;MAAK,SAAS,EAAG,yBAAjB;MAAA,wBACC,QAAC,UAAD;QAAY,QAAQ,EAAEb;MAAtB;QAAA;QAAA;QAAA;MAAA,QADD,eAEC,QAAC,MAAD;QAAQ,QAAQ,EAAEA,QAAlB;QAA4B,KAAK,EAAEE,KAAnC;QAA0C,QAAQ,EAAEC;MAApD;QAAA;QAAA;QAAA;MAAA,QAFD,EAIEC,OAAO,iBACN;QAAA,wBACE,QAAC,eAAD;UAAiB,OAAO,EAAEA;QAA1B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,qBAAD;UAAuB,OAAO,EAAEA;QAAhC;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE,QAAC,QAAD;UAAU,KAAK,EAAC,iBAAhB;UAAkC,KAAK,EAAEA,OAAO,CAACU;QAAjD;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,QAAD;UAAU,KAAK,EAAC,gBAAhB;UAAiC,KAAK,EAAEV,OAAO,CAACW;QAAhD;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QALH;IAAA;MAAA;MAAA;MAAA;IAAA;EAFD;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA1CQjB,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}